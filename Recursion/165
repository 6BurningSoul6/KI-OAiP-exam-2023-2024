#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void buildWordChain(char** words, int numWords, int* used, int currentWordIndex) {
    printf("%s ", words[currentWordIndex]);
    used[currentWordIndex] = 1;

    char lastChar = words[currentWordIndex][strlen(words[currentWordIndex]) - 1];
    int nextWordIndex = -1;

    // Находим следующее слово, у которого символ в начале совпадает с последним символом текущего слова
    for (int i = 0; i < numWords; i++) {
        if (!used[i] && words[i] != NULL && words[i][0] == lastChar) {
            nextWordIndex = i;
            break;
        }
    }

    if (nextWordIndex != -1) {
        buildWordChain(words, numWords, used, nextWordIndex);
    }
}

int main() {
    // Пример использования
    char* words[] = {"apple", "elephant", "tiger", "rabbit", "zebra"};
    int numWords = sizeof(words) / sizeof(words[0]);

    int* used = (int*) malloc(numWords * sizeof(int));
    for (int i = 0; i < numWords; i++) {
        used[i] = 0; // Инициализируем массив used вручную
    }

    // Находим первое слово, чтобы начать цепочку
    int startWordIndex = -1;
    for (int i = 0; i < numWords; i++) {
        if (words[i] != NULL) {
            startWordIndex = i;
            break;
        }
    }

    if (startWordIndex == -1) {
        printf("No available words.\n");
        free(used);
        return 0;
    }

    buildWordChain(words, numWords, used, startWordIndex);

    free(used);

    return 0;
}
